/*
 * generated by Xtext
 */
package org.efry.z80editor.validation

import org.eclipse.xtext.validation.Check
import org.efry.z80editor.z80.SignedByteOffset
import org.efry.z80editor.z80.Z80Package
import org.efry.z80editor.z80.BitType
import org.efry.z80editor.z80.AsciiChar
import org.efry.z80editor.Z80DisplayFormatterUtil

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class Z80Validator extends AbstractZ80Validator {
/*FIXME removed when I added NumericLiteral as an offset type.
	@Check
	def checkOffsetRange(SignedByteOffset offset) {
		var value = offset.value.i; //FIXME need to validate binary and hex numbers too.
		if ("-".equals(offset.sign)) {
			value = -value;
		}
		if (value < -128 || value > 127) {
			error('Signed offset must be in the range (-128 to +127)', Z80Package::eINSTANCE.signedByteOffset_Value)
		}
	}
*/	
	@Check
	def checkBitType(BitType type) {
	    val value = Z80DisplayFormatterUtil.convertNumericLiteralToInt(type.value);
		if (value != null && (value < 0 || value > 7)) {
			error('Bit type must be in the range (0 to 7)', Z80Package::eINSTANCE.bitType_Value);
		}
	}
	
	@Check
	def checkAsciiChar(AsciiChar asciiChar) {
	    var charString = asciiChar.char;
	    if (charString != null && charString.length > 1) {
	        error('Single ascii character required', Z80Package::eINSTANCE.asciiChar_Char);
	    }
	}
	
	//FIXME check for macro numeric arg. It must be inside a macro block.
}
